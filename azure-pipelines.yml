# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master
pool:
  vmImage: windows-latest
  
strategy:
  matrix:
    Python37:
      python.version: '3.7'
  maxParallel: 1

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
    architecture: 'x64'
  displayName: 'Use Python $(python.version)'
- task: VisualStudioTestPlatformInstaller@1
  inputs:
    packageFeedSelector: 'nugetOrg' # Options: nugetOrg, customFeed, netShare
    versionSelector: 'latestPreRelease' # Required when packageFeedSelector == NugetOrg || PackageFeedSelector == CustomFeed# Options: latestPreRelease, latestStable, specificVersion
    testPlatformVersion: # Required when versionSelector == SpecificVersion
    customFeed: # Required when packageFeedSelector == CustomFeed
    username: # Optional
    password: # Optional
    netShare: # Required when packageFeedSelector == NetShare


- script: |
    python -m pip install --upgrade pip
    pip install yamllint
  displayName: 'Install dependencies'

- script: |
    pip install -r requirements.txt
    pip freeze > requirements.txt
  displayName: 'Install dependencies'

- script: |
    npm install chromedriver
  displayName: 'install dependences'

- script: |
    pip install robotframework-screencaplibrary
    pip3 install robotframework robotframework-seleniumlibrary
  displayName: 'install dependences'
  
    
- powershell: |   
    robot -d resultados ./CursoAvancado/argumentos.robot
    pytest
  displayName: 'pytest'